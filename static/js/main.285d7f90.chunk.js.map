{"version":3,"sources":["components/SearchBox.js","components/Scroll.js","components/Card.js","components/CardList.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Scroll","props","style","children","Card","id","name","email","alt","src","CardList","robots","map","user","i","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAeeA,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,qBAAKC,UAAU,MAAf,SACE,uBACEA,UAAU,uCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCCHK,EARA,SAACC,GACd,OACE,qBAAKC,MAAO,CAAC,UAAY,SAAU,UAAY,kBAAmB,OAAS,SAA3E,SACGD,EAAME,YCSEC,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACxB,OACE,sBAAKX,UAAU,wDAAf,UACE,qBAAKY,IAAI,GAAGC,IAAG,+BAA0BJ,EAA1B,mBACf,gCACE,6BAAKC,IACL,4BAAIC,WCcGG,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACE,cAAC,EAAD,CAEET,GAAIM,EAAOG,GAAGT,GACdC,KAAMK,EAAOG,GAAGR,KAChBC,MAAOI,EAAOG,GAAGP,OAHZO,SCaJC,E,kDApBb,WAAYd,GAAQ,IAAD,8BACjB,cAAMA,IACDe,MAAQ,CACXC,UAAU,GAHK,E,8DAODC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAIG,KAAKJ,MAAMC,SACN,qFAEFG,KAAKnB,MAAME,a,GAhBMmB,aC8CbC,G,wDAvCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAC3B,YAAa+B,EAAMC,OAAOC,SAbzC,EAAKX,MAAQ,CACXL,OAAQ,GACRjB,YAAa,IAJH,E,gEAQO,IAAD,OAClBkC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACV,OAAQqB,S,+BAO7B,IAAD,EACwBZ,KAAKJ,MAA7BL,EADA,EACAA,OAAQjB,EADR,EACQA,YACVuC,EAAiBtB,EAAOuB,QAAO,SAAAC,GACnC,OAAOA,EAAM7B,KAAK8B,cAAcC,SAAS3C,EAAY0C,kBAEvD,OAAQzB,EAAO2B,OAGX,sBAAK1C,UAAU,KAAf,UACE,gDACA,cAAC,EAAD,CAAWD,aAAcyB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUb,OAASsB,WAP3B,oBAAIrC,UAAU,KAAd,+B,GAzBY0B,cCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.285d7f90.chunk.js","sourcesContent":["import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div className='pa2'>\n      <input\n        className='pa3 br2 ba b--green bg-lightest-blue'\n        type='search'\n        placeholder='search robots'\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;\n","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{'overflowY':'scroll', 'borderTop':'2px solid black', 'height':'600px'}}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Scroll;\n","import React from 'react';\n\nconst Card = ({ id, name, email }) => {\n  return (\n    <div className='tc bg-lightest-blue dib br3 pa3 ma2 grow bw2 shadow-5'>\n      <img alt='' src={`https://robohash.org/${id}?size=200x200`}/>\n      <div>\n        <h3>{name}</h3>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n  return (\n    <div>\n      {\n        robots.map((user, i) => {\n          return (\n            <Card\n              key={i}\n              id={robots[i].id}\n              name={robots[i].name}\n              email={robots[i].email}\n            />\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default CardList;\n","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    }\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true })\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h3>Opps! something went wrong. Please try again later.</h3>\n    }\n    return this.props.children;\n  }\n}\n\n\nexport default ErrorBoundary;\n","import React, { Component } from 'react';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport CardList from '../components/CardList';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css';\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({robots: users}));\n  }\n\n  onSearchChange = (event) => {\n    this.setState({searchfield: event.target.value});\n  }\n\n  render () {\n    const { robots, searchfield } = this.state;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    });\n    return !robots.length ?\n      <h1 className='tc'> Loading ... </h1> :\n      (\n        <div className='tc' >\n          <h1> Robo Friends </h1>\n          <SearchBox searchChange={this.onSearchChange} />\n          <Scroll>\n            <ErrorBoundary>\n              <CardList robots={ filteredRobots } />\n            </ErrorBoundary>\n          </Scroll>\n        </div>\n      );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}